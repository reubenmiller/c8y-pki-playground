// Code generated by go-swagger; DO NOT EDIT.

package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SimpleenrollReader is a Reader for the Simpleenroll structure.
type SimpleenrollReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SimpleenrollReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSimpleenrollOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSimpleenrollBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewSimpleenrollUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSimpleenrollInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSimpleenrollOK creates a SimpleenrollOK with default headers values
func NewSimpleenrollOK() *SimpleenrollOK {
	return &SimpleenrollOK{
		ContentTransferEncoding: "base64",
		ContentType:             "application/pkcs7-mime",
	}
}

/*SimpleenrollOK handles this case with default header values.

successful operation
*/
type SimpleenrollOK struct {
	ContentTransferEncoding string

	ContentType string

	Payload string
}

func (o *SimpleenrollOK) Error() string {
	return fmt.Sprintf("[POST /simpleenroll][%d] simpleenrollOK  %+v", 200, o.Payload)
}

func (o *SimpleenrollOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Transfer-Encoding
	o.ContentTransferEncoding = response.GetHeader("Content-Transfer-Encoding")

	// response header Content-Type
	o.ContentType = response.GetHeader("Content-Type")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimpleenrollBadRequest creates a SimpleenrollBadRequest with default headers values
func NewSimpleenrollBadRequest() *SimpleenrollBadRequest {
	return &SimpleenrollBadRequest{}
}

/*SimpleenrollBadRequest handles this case with default header values.

invalid request
*/
type SimpleenrollBadRequest struct {
	Payload string
}

func (o *SimpleenrollBadRequest) Error() string {
	return fmt.Sprintf("[POST /simpleenroll][%d] simpleenrollBadRequest  %+v", 400, o.Payload)
}

func (o *SimpleenrollBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimpleenrollUnauthorized creates a SimpleenrollUnauthorized with default headers values
func NewSimpleenrollUnauthorized() *SimpleenrollUnauthorized {
	return &SimpleenrollUnauthorized{}
}

/*SimpleenrollUnauthorized handles this case with default header values.

Authentication information is missing or invalid
*/
type SimpleenrollUnauthorized struct {
	WWWAuthenticate string
}

func (o *SimpleenrollUnauthorized) Error() string {
	return fmt.Sprintf("[POST /simpleenroll][%d] simpleenrollUnauthorized ", 401)
}

func (o *SimpleenrollUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header WWW_Authenticate
	o.WWWAuthenticate = response.GetHeader("WWW_Authenticate")

	return nil
}

// NewSimpleenrollInternalServerError creates a SimpleenrollInternalServerError with default headers values
func NewSimpleenrollInternalServerError() *SimpleenrollInternalServerError {
	return &SimpleenrollInternalServerError{}
}

/*SimpleenrollInternalServerError handles this case with default header values.

something went wrong
*/
type SimpleenrollInternalServerError struct {
	Payload string
}

func (o *SimpleenrollInternalServerError) Error() string {
	return fmt.Sprintf("[POST /simpleenroll][%d] simpleenrollInternalServerError  %+v", 500, o.Payload)
}

func (o *SimpleenrollInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
